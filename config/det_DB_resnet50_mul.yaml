base:
  gpu_id: '0'  # 设置训练的gpu id，多卡训练设置为 '0,1,2'
  algorithm: DB  # 算法名称
  pretrained: True # 是否加载预训练
  in_channels: [256, 512, 1024, 2048] # 
  inner_channels: 256 #
  k: 50
  n_class: 10
  class_names: ['base', 'value', 'hw']
  adaptive: True
  crop_shape: [640,640]  #训练时crop图片的大小
  shrink_ratio: 0.4 # kernel向内收缩比率
  n_epoch: 800 # 训练的epoch
  start_val: 400 #开始验证的epoch，如果不想验证直接设置数值大于n_epoch
  show_step: 20 #设置迭代多少次输出一次loss

  checkpoints: ./checkpoint #保存模型地址
  save_epoch: 20 #设置每多少个epoch保存一次模型
  restore: False #是否恢复训练
  restore_file : ./DB.pth.tar #恢复训练所需加载模型的地址

backbone:
  function: ptocr.model.backbone.det_resnet,resnet50

head:
  function: ptocr.model.head.det_DBHead,DB_Head
#  function: ptocr.model.head.det_FPEM_FFM_Head,FPEM_FFM_Head
#  function: ptocr.model.head.det_FPNHead,FPN_Head

segout:
  function: ptocr.model.segout.det_DB_segout,SegDetectorMul

architectures:
  model_function: ptocr.model.architectures.det_model,DetModel
  loss_function: ptocr.model.architectures.det_model,DetLoss

loss:
  function: ptocr.model.loss.db_loss,DBLossMul
  l1_scale: 10
  bce_scale: 1
  class_scale: 1

optimizer:
  function: ptocr.optimizer,AdamDecay
  base_lr: 0.002
  beta1: 0.9
  beta2: 0.999
  weight_decay: 0.0005

#optimizer:
#  function: ptocr.optimizer,SGDDecay
#  base_lr: 0.002
#  momentum: 0.99
#  weight_decay: 0.0005

optimizer_decay:
  function: ptocr.optimizer,adjust_learning_rate_poly
  factor: 0.9

#optimizer_decay:
#  function: ptocr.optimizer,adjust_learning_rate
#  schedule: [1,2]
#  gama: 0.1

trainload:
  function: ptocr.dataloader.DetLoad.DBProcess,DBProcessTrainMul
  bash_path: train_data_db
  train_file: train_data_db/train.txt
  num_workers: 1
  batch_size: 1

testload:
  function: ptocr.dataloader.DetLoad.DBProcess,DBProcessTest
  bash_path: train_data_db
  test_file: train_data_db/test.txt
  test_size: 736
  stride: 32
  num_workers: 1
  batch_size: 1
  #add_padding: False

postprocess:
  function: ptocr.postprocess.DBpostprocess,DBPostProcessMul
  is_poly: False #测试时，检测弯曲文本设置成 True，否则就是输出矩形框
  thresh: 0.5
  box_thresh: 0.6
  max_candidates: 1000
  unclip_ratio: 2
  min_size: 3

infer:
  model_path: 'weight/DB_20.pth.tar'
  path: 'imgae'
  save_path: './image'
